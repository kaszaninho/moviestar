@using System.Linq;
@using DatabaseAPI.Models.DictionaryModels;
@using static PortalWWW.Helpers.GenericCheck;
@model dynamic

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Type entityType = ViewData["type"] as Type;
    // Get the list of columns, excluding collections and Id fields
    var columnList = entityType.GetProperties()
        .Where(prop => !IsGenericCollection(prop.PropertyType))
        .Select(prop => char.ToLower(prop.Name[0]) + prop.Name.Substring(1))
        .ToList();



    // Serialize the column list to JSON
    var columnListJson = Json.Serialize(columnList);
}
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" />

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New @entityType.Name</a>
</p>

<table id="tblData" class="table table-striped table-bordered table-hover table-sm table-responsive">
    <thead class="thead-dark">
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Is Active</th>
            <th>Created At</th>
            <th>Modified At</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section Scripts
{
    <script>
        function loadDataTable() {
            const myArray = @Html.Raw(Json.Serialize(columnList));
            const modelType = "@entityType.Name.ToLower()";
            expectedpayload = [];

            myArray.forEach((item, index) => {
                expectedpayload.push({ "data": item });
            })
            dataTable = $('#tblData').DataTable({
                "ajax": { url: `/${modelType}/getall` },
                "columns": [
                    { "data": "id" },
                    { "data": "name" },
                    { "data": "isActive" },
                    { "data": "createdAt" },
                    { "data": "modifiedAt" },
                    {
                        data: 'id',
                        "render": function (data) {
                            return `<div class="test-center" > 
                            <a href="/${modelType}/delete?id=${data}" class="btn btn-primary"> Delete </a>
                                    <a href="/${modelType}/details?id=${data}" class="btn btn-primary"> Details </a>
                                    <a href="/${modelType}/edit?id=${data}" class="btn btn-primary"> Edit </a>
                                    </div>`
                        }
                    }
                ]
            });
        }
        $(document).ready(function () {
            loadDataTable();
        }
        );
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    @*     <script src="~/js/getAllTable.js"></script>
 *@
}

@* @foreach (var item in Model)
        {expectedpayload
            <tr>
                <td>@item.Id</td>
                @foreach (var prop in entityType.GetProperties())
                {
                    if (IsGenericCollection(prop.PropertyType)) continue;
                    if (IsId(prop.Name)) continue;
                    if (IsTypeOfBaseDatatable(prop.PropertyType))
                    {
                        <td>@GetNameFromPropertyOfObject(prop, item)</td>
                    }
                    else
                    {
                        <td>@prop.GetValue(item, null)</td>
                    }
                }
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }


            @foreach (var prop in entityType.GetProperties())
            {
                if (IsGenericCollection(prop.PropertyType)) continue;
                <th>@prop.Name</th>
            }
            <th>Actions</th>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
        *@